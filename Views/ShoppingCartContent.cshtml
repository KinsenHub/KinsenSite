@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using System.Linq
@using Umbraco.Extensions
@using Umbraco.Cms.Core          
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	var cartTitle = Model.Value<string>("title");
	ViewData["Title"] = "Το καλάθι σου | kinsen.gr";
	var usedPage = UmbracoHelper.ContentAtRoot()
        .SelectMany(x => x.DescendantsOrSelf())
        .FirstOrDefault(x => x.ContentType.Alias == "usedCarSalesPage");

    var usedUrl = usedPage?.Url() ?? "/πωλήσεις-μεταχειρισμένων/";
	ViewBag.BodyClass = "cart-page";
}

<div class="container my-5" id="offerCartPage">
  <!-- Άδειο καλάθι -->
  <div id="cartEmpty" class="d-none text-center p-5 border rounded-4 bg-light">
    <div class="mb-3" aria-hidden="true" style="font-size:52px;">
      <i class="fa-solid fa-cart-shopping" style="color:#023859;"></i>
    </div>
    <h2 class="h4 mb-2" style="color:#023859;">Το καλάθι σας είναι άδειο</h2>
    <p class="text-muted mb-4">Προσθέστε αυτοκίνητα για να ζητήσετε προσφορά.</p>
    <a href="@usedUrl" class="btn btn-primary">Πίσω στα αυτοκίνητα</a>
  </div>

  <!-- Περιεχόμενο καλαθιού -->
  <div id="cartHasItems" class="d-none">
    <div class="cart-shell"><!-- κεντραρισμένο κέλυφος -->

      <!-- header: τίτλος αριστερά, καθαρισμός δεξιά -->
      <div class="cart-header d-flex align-items-center justify-content-between mb-3">
        <h1 class="h4 m-0" style="color:#001858;">Το καλάθι σας</h1>
        <button id="clearCartBtn" class="btn btn-outline-danger btn-sm">
          <i class="fa-regular fa-circle-xmark"></i> Καθαρισμός καλαθιού
        </button>
      </div>

      <!-- λίστα καρτών στο κέντρο -->
      <div class="cart-list-wrap">
        <div id="cartList" class="cart-list"></div>
      </div>

      <!-- footer: σύνολο αριστερά, CTA στο κέντρο -->
      <div id="cartFooter" class="cart-footer d-none">
        <div class="cart-total text-muted small">
          Σύνολο οχημάτων: <span id="cart-total">0</span>
        </div>
        <button id="cartSubmitOfferBtn" class="btn btn-success" data-bs-toggle="modal" 
        data-bs-target="#offerModalfromCart">Ζήτα προσφορά</button>
      </div>

    </div>
</div>
</div>

@* ----------------MODAL Για Στοιχεία Πελ΄άτη------------- *@
  <div class="modal fade" id="offerModalfromCart" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">

      <div class="modal-header">
        <h5 class="modal-title" id="offerModalLabel">Επιβεβαίωση Αιτήματος</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Κλείσιμο"></button>
      </div>

      <div class="modal-body">
        <form id="offerForm" onsubmit="return false;">
        <input type="hidden" id="efapaks" value="efapaks" />
        <input type="hidden" id="toko" value="toko" />
        <div class="mb-3">
          <label for="firstName" class="form-label">Όνομα</label>
          <input type="text" class="form-control" id="firstName" required>
          <div class="invalid-feedback">Δώστε έγκυρο Όνομα</div>
        </div>
        <div class="mb-3">
          <label for="lastName" class="form-label">Επώνυμο</label>
          <input type="text" class="form-control" id="lastName" required>
          <div class="invalid-feedback">Δώστε έγκυρο Επώνυμο</div>
        </div>
        <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" class="form-control" id="email" required autocomplete="email">
          <div class="invalid-feedback">Δώστε έγκυρο email</div>
        </div>
        <div class="mb-3">
          <label for="phone" class="form-label">Κινητό</label>
          <input
            type="tel"
            id="phone"
            required
            pattern="^(?:\+?30|0030)?[ \-]*69(?:[ \-]*\d){8}$"
            inputmode="tel"
            autocomplete="tel"
          >
          <div class="invalid-feedback">Κινητό μορφής 69XXXXXXXX.</div>
        </div>
        <div id="offerStatus" class="small mt-2" style="display:none;"></div>
        </form>
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Κλείσιμο</button>
        <button id="offerSubmitBtnCart" type="button" class="btn btn-primary">Υποβολή</button>
      </div>

      </div>
    </div>
  </div>

<script>
const CartAPI = {
  async add(item) {
    const r = await fetch("/umbraco/api/cart/add", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(item),
    });
    if (!r.ok) throw new Error(await r.text());
    return r.json(); // { count, items }
  },
  async count() {
    const r = await fetch("/umbraco/api/cart/count");
    if (!r.ok) return { count: 0 };
    return r.json(); // { count }
  },
  async get() {
    const r = await fetch("/umbraco/api/cart/get");
    if (!r.ok) throw new Error(await r.text());
    return r.json(); // CartItem[]
  },
  async remove(id) {
    const r = await fetch("/umbraco/api/cart/remove", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id }),
    });
    if (!r.ok) throw new Error(await r.text());
    return r.json();
  },
  async clear() {
    const r = await fetch("/umbraco/api/cart/clear", { method: "POST" });
    if (!r.ok) throw new Error(await r.text());
    return r.json();
  },
};
</script>

<script src="~/js/shoppingCart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


