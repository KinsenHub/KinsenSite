﻿@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Core.Models; 
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
	
    var pageTitle = Model.Value<string>("pageTitle");
    var media = Model.Value<MediaWithCrops>("homeVideo");
    var videoUrl = media?.MediaUrl();
    var homeImage = Model.Value<IPublishedContent>("imgPaper");
    var heroHeader = Model.Value<string>("heroHeader");
    var heroDescription = Model.Value<string>("heroDescription");
	var blockListItem = Model.Value<IEnumerable<BlockListItem>>("statsItem");
    var paragr = Model.Value<string>("paragr");
    var carCardBlock = Model.Value<IEnumerable<BlockListItem>>("carouselCars");
    var photoTrilogy = Model.Value<IEnumerable<BlockListItem>>("photoTrilogy");
    var trilogyBlock = Model.Value<IEnumerable<BlockListItem>>("trilogyBlock");
	var featureCardsBlock = Model.Value<IEnumerable<BlockListItem>>("featureCard");
    var redirectUrl = "/πωλήσεις-μεταχειρισμένων/"; 
	@* var fourStepsBlock = Model.Value<IEnumerable<BlockListItem>>("fourSteps"); *@
	var accordionQuestionsBlock = Model.Value<IEnumerable<BlockListItem>>("accordionQuestions");
    var carouselBackImage = Model.Value<MediaWithCrops>("carouselBackImage");
    // Κατάσταση χρήστη
    var isLoggedIn = Context?.User?.Identity?.IsAuthenticated ?? false;
}

<style>
    .trust-strip{padding:18px 0;border-top:1px solid #eef1f4}
    .trust-strip ul{display:flex;gap:32px;justify-content:center;align-items:center;flex-wrap:wrap;opacity:.9}
    .trust-strip img{height:30px;filter:grayscale(100%);transition:filter .2s,opacity .2s}
    .trust-strip img:hover{filter:none;opacity:1}
</style>

<div class="hero-wrapper">
    @if (!string.IsNullOrWhiteSpace(videoUrl))
    {
        <video class="hero-video" autoplay muted playsinline loop preload="metadata">
            <source src="@videoUrl" type="video/mp4" />
            Ο browser δεν υποστηρίζει video.
        </video>
    }
    <div class="hero-overlay">
        <h1 class="hero-title">@pageTitle</h1>

        <a href="https://kinsen.gr" class="pill-cta" aria-label="Μάθετε περισσότερα">
            <span class="pill-cta__label">Μάθετε περισσότερα</span>
            <span class="pill-cta__icon" aria-hidden="true">
                <!-- καθαρό SVG βελάκι -->
                <svg viewBox="0 0 24 24" width="22" height="22">
                <path d="M5 12h12M13 6l6 6-6 6" fill="none" stroke="currentColor" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </span>
        </a>
    </div>
</div>


@*-----------------Animation Counter----------------*@
<section class="stats-section">
    <div class="stats-row">
        <div class="stat-box">
            <div class="stat-number" data-target="200" data-plus="true" data-unit="">0</div>
            <div class="stat-label">
                @(blockListItem?.ElementAtOrDefault(0)?.Content?.Value("statLabel"))
            </div>
        </div>

        <div class="stat-box">
            <div class="stat-number" data-target="300" data-plus="true" data-unit="">0</div>
            <div class="stat-label">
                @(blockListItem?.ElementAtOrDefault(1)?.Content?.Value("statLabel"))
            </div>
        </div>

        <div class="stat-box">
            <div class="stat-number" data-target="900" data-plus="false" data-unit="χλμ">0</div>
            <div class="stat-label">
                @(blockListItem?.ElementAtOrDefault(2)?.Content?.Value("statLabel"))
            </div>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(paragr?.ToString()))
    {
        <div class="stats-paragr">
            @Html.Raw(paragr)
        </div>
    }
</section>

@*---------------Feature Cards---------------*@
@if (featureCardsBlock != null && featureCardsBlock.Any())
{
    @* <h2 class="featureTitle">Επιλέξτε ανάμεσα σε ποικιλία κατηγοριών</h2> *@

    <div class="features-container">
        @foreach (var card in featureCardsBlock)
        {
            var content = card.Content;
            var img = content.Value<MediaWithCrops>("featureImg"); 
            var description = content.Value<string>("description");
            var targetSlug = content.Value<string>("targetSlug") ?? "";

            <a href="/usedCarSalesPage?carType=@targetSlug" onclick="selectCategory('@targetSlug')" class="feature-card-link">
                <div class="feature-card">
                    <div class="feature-icon">
                        <img src="@img?.Url()"loading="lazy" style="width: 200px;" />
                    </div>
                    <div class="feature-description">
                        <p>@Html.Raw(description)</p>
                    </div>
                </div>
            </a>
        }
    </div>
}

@*------------------Carousel-------------------*@
<h2 class="prosfores">Ανακαλύψτε τις Προσφορές σε ποικιλία μοντέλων</h2>

@if (carCardBlock != null && carCardBlock.Any())
{
    <div id="carouselExampleDark" class="carousel carousel-dark slide" data-bs-ride="carousel">
        
        @* ===== Indicators δυναμικά ===== *@
        <div class="carousel-indicators">
            @{
                var index = 0;
                foreach (var card in carCardBlock)
                {
                    <button type="button" data-bs-target="#carouselExampleDark"
                            data-bs-slide-to="@index"
                            class="@(index == 0 ? "active" : "")"
                            aria-current="@(index == 0 ? "true" : "false")"
                            aria-label="Slide @(index + 1)">
                    </button>;
                    index++;
                }
            }
        </div>

        @* ===== Carousel Items ===== *@
        <div class="carousel-inner">
            @{
                index = 0;
                foreach (var card in carCardBlock)
                {
                    var content = card?.Content;
                    if (content == null) { continue; }

                    var carID = content.Value<string>("carID");
                    var carPic = content.Value<Umbraco.Cms.Core.Models.MediaWithCrops>("carPic");
                    var modelo = content.Value<string>("model");
                    var yearRelease = content.Value<string>("yearRelease");
                    var price = content.Value<string>("price");
                    var typeOfDiscount = content.Value<string>("typeOfDiscount");

                    <div class="carousel-item @(index == 0 ? "active" : "")" data-bs-interval="4000">
                        <div class="car-card text-center" data-id="@carID">
                            <div class="discount-badge">@typeOfDiscount</div>
                            <img src="@carPic?.Url()" class="d-block mx-auto" alt="@modelo" style="max-height:300px; object-fit:contain;" />
                            <h3>@modelo</h3>
                            <p>@yearRelease</p>
                            <p class="price">@price €</p>

                            <a href="/carDetails/"
                               class="btn-offer"
                               onclick="sessionStorage.setItem('selectedCarId', '@carID')">
                                Δείτε το
                            </a>
                        </div>
                    </div>;

                    index++;
                }
            }
        </div>

        @* ===== Controls (βελάκια) ===== *@
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Προηγούμενο</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Επόμενο</span>
        </button>
    </div>
}

@*----------------Photo Trilogy------------------*@
<section class="gallery-bg">

@if ((photoTrilogy != null && photoTrilogy.Any()) && (trilogyBlock != null && trilogyBlock.Any()))
{
    var allPhotos = new List<MediaWithCrops>();
    var allTexts  = new List<(string Title, string BodyHtml)>();

    // 1) Photos: trilogyPhoto1..3
    foreach (var blk in photoTrilogy)
    {
        var c = blk.Content;
        for (var i = 1; i <= 3; i++)
        {
            var p = c.Value<MediaWithCrops>($"trilogyPhoto{i}");
            if (p != null) allPhotos.Add(p);
        }
    }

    // 2) Texts: titleCard / cardBody
    foreach (var tb in trilogyBlock)
    {
        var ct = tb.Content;
        var title = ct.Value<string>("titleCard");
        var body  = ct.Value<string>("cardBody");
        allTexts.Add((title ?? string.Empty, body ?? string.Empty));
    }

    if (allPhotos.Any())
    {
        var cards = new List<(MediaWithCrops Photo, string Title, string BodyHtml)>();

        if (allTexts.Count == 1)
        {
            var only = allTexts[0];
            foreach (var ph in allPhotos)
                cards.Add((ph, only.Title, only.BodyHtml));
        }
        else
        {
            var take = Math.Min(allPhotos.Count, allTexts.Count);
            for (int i = 0; i < take; i++)
                cards.Add((allPhotos[i], allTexts[i].Title, allTexts[i].BodyHtml));
        }

        <div class="container py-4 trilogy-container">
            <div class="row justify-content-center g-5">
                @foreach (var card in cards)
                {
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 d-flex">
                        <div class="card h-100 w-100 border-0 bg-transparent">
                            <div class="ratio ratio-16x9 mb-3">
                                <img src="@card.Photo?.Url()" class="w-100 h-100 object-fit-cover rounded-4" alt="" />
                            </div>
                            <div class="card-body p-0 d-flex flex-column trilogy-text-block">
                                @if (!string.IsNullOrWhiteSpace(card.Title))
                                {
                                    <h6 class="text-block-h3">@card.Title</h6>
                                }
                                @if (!string.IsNullOrWhiteSpace(card.BodyHtml))
                                {
                                    <p>@Html.Raw(card.BodyHtml)</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}     

@* <div class="photo-trilogy-container">
            <div class="main-photo">
                <img src="@trilogyPhoto1?.Url()" alt="Main Photo" />
            </div>
            <div class="side-photos">
                <img src="@trilogyPhoto2?.Url()" alt="Side Photo 1" />
                <img src="@trilogyPhoto3?.Url()" alt="Side Photo 2" />
            </div>
        </div> *@
    
@* @if (trilogyBlock != null && trilogyBlock.Any())
{
    <div class="photo-trilogy-container">
        @foreach (var item in trilogyBlock)
        {
            var content = item.Content;
            var title = content.Value<string>("titleCard");
            var description = content.Value<string>("cardBody");

            <div class="trilogy-text-block">
                <h3 class="text-block-h3">@title</h3>
                <p> @Html.Raw(description)</p>
            </div>
        }
    </div>
} *@


<script>
  function selectCategory(type) {
    sessionStorage.setItem("selectedCarType", type);
    window.location.href = "/πωλήσεις-μεταχειρισμένων"; 
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
